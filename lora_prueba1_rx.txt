#include <Arduino.h>
#include <RadioLib.h>

int pin_cs =        PIN_SPI_SS;
int pin_dio0 =      D0;
int pin_tx_enable = PWM0;
int pin_rx_enable = G0;
int pin_nrst =      G1;
int pin_dio1 =      G2;

SX1276 radio = new Module(pin_cs, pin_dio0, pin_nrst, pin_dio1);

void setup() {
  Serial.begin(115200);

  // Inicializar el módulo LoRa
  Serial.print(F("[SX1276] Initializing ... "));
  int state = radio.begin(915.0, 125.0, 9, 7, 0x34, 10, 8, 0);
  if (state == RADIOLIB_ERR_NONE) {
    Serial.println(F("success!"));
  } else {
    Serial.print(F("failed, code "));
    Serial.println(state);
    while (true);
  }

  // Poner el módulo en modo de recepción continua
  Serial.println(F("[SX1276] Starting continuous receive mode ..."));
  state = radio.startReceive();
  if (state == RADIOLIB_ERR_NONE) {
    Serial.println(F("Receiver ready!"));
  } else {
    Serial.print(F("failed, code "));
    Serial.println(state);
  }
}

void loop() {
  // Recibir paquetes
  Serial.print(F("[SX1276] Waiting for packet ... "));
  String message;
  int state = radio.receive(message);

  if (state == RADIOLIB_ERR_NONE) {
    Serial.println(F("Received!"));
    Serial.print(F("Message: "));
    Serial.println(message);
  } else if (state == RADIOLIB_ERR_RX_TIMEOUT) {
    Serial.println(F("Receive timed out"));
  } else if (state == RADIOLIB_ERR_CRC_MISMATCH) {
    Serial.println(F("CRC error"));
  } else {
    Serial.print(F("Receive failed, code "));
    Serial.println(state);
  }
}