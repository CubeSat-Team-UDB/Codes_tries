#include <Arduino.h>
#include <RadioLib.h>

int pin_cs = PIN_SPI_SS;
int pin_dio0 = D0;
int pin_tx_enable = PWM0;
int pin_rx_enable = G0;
int pin_nrst = G1;
int pin_dio1 = G2;

SX1276 radio = new Module(pin_cs, pin_dio0, pin_nrst, pin_dio1);

unsigned long lastSendTime = 0;
const unsigned long sendInterval = 5000;

String lastMessage = "";
bool ackReceived = false;

void setup() {
  Serial.begin(115200);
  delay(1000);

  Serial.print(F("[SX1276] Initializing ... "));
  int state = radio.begin(915.0, 125.0, 9, 7, 0x34, 10, 8, 0);
  if (state == RADIOLIB_ERR_NONE) {
    Serial.println(F("success!"));
  } else {
    Serial.print(F("failed, code "));
    Serial.println(state);
    while (true);
  }

  radio.setDio1Action(onReceive);
  radio.startReceive();
}

void loop() {
  if (millis() - lastSendTime >= sendInterval || !ackReceived) {
    // Generar datos de telemetría simulados
    float lat = 13.6929;
    float lon = -89.2182;
    float presion = 1013.25;
    float temp = 29.7;

    lastMessage = String(lat, 4) + "," + String(lon, 4) + "," +
                  String(presion, 2) + "," + String(temp, 2);

    Serial.print(F("[TX] Enviando: "));
    Serial.println(lastMessage);

    int state = radio.transmit(lastMessage);
    if (state == RADIOLIB_ERR_NONE) {
      Serial.println(F("[TX] Mensaje enviado."));
      ackReceived = false;
    } else {
      Serial.println(F("[TX] Error en transmisión."));
    }

    lastSendTime = millis();
    radio.startReceive();
  }
}

// Manejador para recibir ACK
void onReceive() {
  String ack = radio.readString();
  ack.trim();

  if (ack == "ACK") {
    ackReceived = true;
    Serial.println("[TX] ACK recibido.");
  } else {
    Serial.print("[TX] Recibido no esperado: ");
    Serial.println(ack);
  }

  radio.startReceive();
}
